{"ast":null,"code":"var _jsxFileName = \"/Users/ramyanagandla/Desktop/dataextractionproject/frontend/src/Customerdetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './CustomerDetails.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomerDetails() {\n  _s();\n  const [values, setValues] = useState({\n    CustID: \"\"\n  });\n  const [customers, setCustomers] = useState([]);\n  const handleSearchById = async () => {\n    axios.post(\"http://localhost:8081/Customerdetails\", {\n      CustID: values.CustID\n    }).then(res => {\n      if (res.data.length > 0) {\n        setCustomers(res.data);\n      } else {\n        alert(\"No customer found\");\n      }\n    }).catch(err => console.log(err));\n  };\n  const handleFetchAll = async () => {\n    axios.get(\"http://localhost:8081/Customerdetailsall\").then(res => {\n      if (res.data.length > 0) {\n        setCustomers(res.data);\n      } else {\n        alert(\"No customers found\");\n      }\n    }).catch(err => console.log(err));\n  };\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CustID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"CustID\",\n          value: values.CustID,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearchById,\n          children: \"Search by CustID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFetchAll,\n          children: \"Fetch All Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerDetails, \"MsMjmcrNpbjocyupbgrGfV9lX9Q=\");\n_c = CustomerDetails;\nexport default CustomerDetails;\nvar _c;\n$RefreshReg$(_c, \"CustomerDetails\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CustomerDetails","_s","values","setValues","CustID","customers","setCustomers","handleSearchById","post","then","res","data","length","alert","catch","err","console","log","handleFetchAll","get","handleChange","e","target","name","value","className","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ramyanagandla/Desktop/dataextractionproject/frontend/src/Customerdetails.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './CustomerDetails.css'; // Import the CSS file\n\nfunction CustomerDetails() {\n  const [values, setValues] = useState({\n    CustID: \"\",\n  });\n  const [customers, setCustomers] = useState([]);\n\n  const handleSearchById = async () => {\n    axios\n      .post(\"http://localhost:8081/Customerdetails\", { CustID: values.CustID })\n      .then((res) => {\n        if (res.data.length > 0) {\n          setCustomers(res.data);\n        } else {\n          alert(\"No customer found\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleFetchAll = async () => {\n    axios\n      .get(\"http://localhost:8081/Customerdetailsall\")\n      .then((res) => {\n        if (res.data.length > 0) {\n          setCustomers(res.data);\n        } else {\n          alert(\"No customers found\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"search-section\">\n        <label>\n          CustID:\n          <input\n            type=\"number\"\n            name=\"CustID\"\n            value={values.CustID}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <div className=\"button-group\">\n          <button onClick={handleSearchById}>Search by CustID</button>\n          <button onClick={handleFetchAll}>Fetch All Customers</button>\n        </div>\n      </div>\n      <div className=\"results-section\">\n        <table>\n          {/* ... table code remains the same ... */}\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomerDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}